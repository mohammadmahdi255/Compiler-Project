Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ERROR

Grammar

Rule 0     S' -> program
Rule 1     program -> PROGRAM_KW IDENTIFIER declarations procedure_list compound_statement DOT
Rule 2     declarations -> VAR_KW declaration_list SEMICOLON
Rule 3     declarations -> empty
Rule 4     declaration_list -> identifier_list COLON type
Rule 5     declaration_list -> declaration_list SEMICOLON identifier_list COLON type
Rule 6     identifier_list -> IDENTIFIER
Rule 7     identifier_list -> identifier_list COMMA IDENTIFIER
Rule 8     type -> INTEGER_KW
Rule 9     type -> REAL_KW
Rule 10    procedure_list -> procedure_list procedure
Rule 11    procedure_list -> procedure_list function
Rule 12    procedure_list -> empty
Rule 13    procedure -> PROCEDURE_KW IDENTIFIER parameters SEMICOLON declarations compound_statement SEMICOLON
Rule 14    function -> FUNCTION_KW IDENTIFIER parameters COLON type SEMICOLON declarations compound_statement SEMICOLON
Rule 15    parameters -> LRB declaration_list RRB
Rule 16    parameters -> empty
Rule 17    compound_statement -> BEGIN_KW statement_list END_KW
Rule 18    statement_list -> statement
Rule 19    statement_list -> statement_list SEMICOLON statement
Rule 20    statement -> IDENTIFIER ASSIGN expression
Rule 21    statement -> IF_KW expression THEN_KW statement ELSE_KW statement
Rule 22    statement -> IF_KW expression THEN_KW statement
Rule 23    statement -> WHILE_KW expression DO_KW statement
Rule 24    statement -> compound_statement
Rule 25    statement -> IDENTIFIER arguments
Rule 26    statement -> IDENTIFIER ASSIGN IDENTIFIER arguments
Rule 27    statement -> empty
Rule 28    arguments -> LRB actual_parameter_list RRB
Rule 29    actual_parameter_list -> actual_parameter_list COMMA actual_parameter
Rule 30    actual_parameter_list -> actual_parameter
Rule 31    actual_parameter -> expression
Rule 32    expression -> INTEGER_CONSTANT
Rule 33    expression -> REAL_CONSTANT
Rule 34    expression -> IDENTIFIER
Rule 35    expression -> expression SUM expression
Rule 36    expression -> expression SUB expression
Rule 37    expression -> expression MUL expression
Rule 38    expression -> expression DIV expression
Rule 39    expression -> SUB expression
Rule 40    expression -> expression DIV_KW expression
Rule 41    expression -> expression MOD_KW expression
Rule 42    expression -> expression LT expression
Rule 43    expression -> expression LE expression
Rule 44    expression -> expression EQ expression
Rule 45    expression -> expression NE expression
Rule 46    expression -> expression GT expression
Rule 47    expression -> expression GE expression
Rule 48    expression -> expression AND_KW expression
Rule 49    expression -> expression OR_KW expression
Rule 50    expression -> NOT_KW expression
Rule 51    expression -> LRB expression RRB
Rule 52    empty -> <empty>

Terminals, with rules where they appear

AND_KW               : 48
ASSIGN               : 20 26
BEGIN_KW             : 17
COLON                : 4 5 14
COMMA                : 7 29
DIV                  : 38
DIV_KW               : 40
DOT                  : 1
DO_KW                : 23
ELSE_KW              : 21
END_KW               : 17
EQ                   : 44
ERROR                : 
FUNCTION_KW          : 14
GE                   : 47
GT                   : 46
IDENTIFIER           : 1 6 7 13 14 20 25 26 26 34
IF_KW                : 21 22
INTEGER_CONSTANT     : 32
INTEGER_KW           : 8
LE                   : 43
LRB                  : 15 28 51
LT                   : 42
MOD_KW               : 41
MUL                  : 37
NE                   : 45
NOT_KW               : 50
OR_KW                : 49
PROCEDURE_KW         : 13
PROGRAM_KW           : 1
REAL_CONSTANT        : 33
REAL_KW              : 9
RRB                  : 15 28 51
SEMICOLON            : 2 5 13 13 14 14 19
SUB                  : 36 39
SUM                  : 35
THEN_KW              : 21 22
VAR_KW               : 2
WHILE_KW             : 23
error                : 

Nonterminals, with rules where they appear

actual_parameter     : 29 30
actual_parameter_list : 28 29
arguments            : 25 26
compound_statement   : 1 13 14 24
declaration_list     : 2 5 15
declarations         : 1 13 14
empty                : 3 12 16 27
expression           : 20 21 22 23 31 35 35 36 36 37 37 38 38 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 51
function             : 11
identifier_list      : 4 5 7
parameters           : 13 14
procedure            : 10
procedure_list       : 1 10 11
program              : 0
statement            : 18 19 21 21 22 23
statement_list       : 17 19
type                 : 4 5 14

Parsing method: LALR

state 0

    (0) S' -> . program
    (1) program -> . PROGRAM_KW IDENTIFIER declarations procedure_list compound_statement DOT

    PROGRAM_KW      shift and go to state 2

    program                        shift and go to state 1

state 1

    (0) S' -> program .



state 2

    (1) program -> PROGRAM_KW . IDENTIFIER declarations procedure_list compound_statement DOT

    IDENTIFIER      shift and go to state 3


state 3

    (1) program -> PROGRAM_KW IDENTIFIER . declarations procedure_list compound_statement DOT
    (2) declarations -> . VAR_KW declaration_list SEMICOLON
    (3) declarations -> . empty
    (52) empty -> .

    VAR_KW          shift and go to state 5
    BEGIN_KW        reduce using rule 52 (empty -> .)
    PROCEDURE_KW    reduce using rule 52 (empty -> .)
    FUNCTION_KW     reduce using rule 52 (empty -> .)

    declarations                   shift and go to state 4
    empty                          shift and go to state 6

state 4

    (1) program -> PROGRAM_KW IDENTIFIER declarations . procedure_list compound_statement DOT
    (10) procedure_list -> . procedure_list procedure
    (11) procedure_list -> . procedure_list function
    (12) procedure_list -> . empty
    (52) empty -> .

    BEGIN_KW        reduce using rule 52 (empty -> .)
    PROCEDURE_KW    reduce using rule 52 (empty -> .)
    FUNCTION_KW     reduce using rule 52 (empty -> .)

    procedure_list                 shift and go to state 7
    empty                          shift and go to state 8

state 5

    (2) declarations -> VAR_KW . declaration_list SEMICOLON
    (4) declaration_list -> . identifier_list COLON type
    (5) declaration_list -> . declaration_list SEMICOLON identifier_list COLON type
    (6) identifier_list -> . IDENTIFIER
    (7) identifier_list -> . identifier_list COMMA IDENTIFIER

    IDENTIFIER      shift and go to state 11

    declaration_list               shift and go to state 9
    identifier_list                shift and go to state 10

state 6

    (3) declarations -> empty .

    BEGIN_KW        reduce using rule 3 (declarations -> empty .)
    PROCEDURE_KW    reduce using rule 3 (declarations -> empty .)
    FUNCTION_KW     reduce using rule 3 (declarations -> empty .)


state 7

    (1) program -> PROGRAM_KW IDENTIFIER declarations procedure_list . compound_statement DOT
    (10) procedure_list -> procedure_list . procedure
    (11) procedure_list -> procedure_list . function
    (17) compound_statement -> . BEGIN_KW statement_list END_KW
    (13) procedure -> . PROCEDURE_KW IDENTIFIER parameters SEMICOLON declarations compound_statement SEMICOLON
    (14) function -> . FUNCTION_KW IDENTIFIER parameters COLON type SEMICOLON declarations compound_statement SEMICOLON

    BEGIN_KW        shift and go to state 15
    PROCEDURE_KW    shift and go to state 16
    FUNCTION_KW     shift and go to state 17

    compound_statement             shift and go to state 12
    procedure                      shift and go to state 13
    function                       shift and go to state 14

state 8

    (12) procedure_list -> empty .

    BEGIN_KW        reduce using rule 12 (procedure_list -> empty .)
    PROCEDURE_KW    reduce using rule 12 (procedure_list -> empty .)
    FUNCTION_KW     reduce using rule 12 (procedure_list -> empty .)


state 9

    (2) declarations -> VAR_KW declaration_list . SEMICOLON
    (5) declaration_list -> declaration_list . SEMICOLON identifier_list COLON type

    SEMICOLON       shift and go to state 18


state 10

    (4) declaration_list -> identifier_list . COLON type
    (7) identifier_list -> identifier_list . COMMA IDENTIFIER

    COLON           shift and go to state 19
    COMMA           shift and go to state 20


state 11

    (6) identifier_list -> IDENTIFIER .

    COLON           reduce using rule 6 (identifier_list -> IDENTIFIER .)
    COMMA           reduce using rule 6 (identifier_list -> IDENTIFIER .)


state 12

    (1) program -> PROGRAM_KW IDENTIFIER declarations procedure_list compound_statement . DOT

    DOT             shift and go to state 21


state 13

    (10) procedure_list -> procedure_list procedure .

    BEGIN_KW        reduce using rule 10 (procedure_list -> procedure_list procedure .)
    PROCEDURE_KW    reduce using rule 10 (procedure_list -> procedure_list procedure .)
    FUNCTION_KW     reduce using rule 10 (procedure_list -> procedure_list procedure .)


state 14

    (11) procedure_list -> procedure_list function .

    BEGIN_KW        reduce using rule 11 (procedure_list -> procedure_list function .)
    PROCEDURE_KW    reduce using rule 11 (procedure_list -> procedure_list function .)
    FUNCTION_KW     reduce using rule 11 (procedure_list -> procedure_list function .)


state 15

    (17) compound_statement -> BEGIN_KW . statement_list END_KW
    (18) statement_list -> . statement
    (19) statement_list -> . statement_list SEMICOLON statement
    (20) statement -> . IDENTIFIER ASSIGN expression
    (21) statement -> . IF_KW expression THEN_KW statement ELSE_KW statement
    (22) statement -> . IF_KW expression THEN_KW statement
    (23) statement -> . WHILE_KW expression DO_KW statement
    (24) statement -> . compound_statement
    (25) statement -> . IDENTIFIER arguments
    (26) statement -> . IDENTIFIER ASSIGN IDENTIFIER arguments
    (27) statement -> . empty
    (17) compound_statement -> . BEGIN_KW statement_list END_KW
    (52) empty -> .

    IDENTIFIER      shift and go to state 24
    IF_KW           shift and go to state 25
    WHILE_KW        shift and go to state 26
    BEGIN_KW        shift and go to state 15
    END_KW          reduce using rule 52 (empty -> .)
    SEMICOLON       reduce using rule 52 (empty -> .)

    statement_list                 shift and go to state 22
    statement                      shift and go to state 23
    compound_statement             shift and go to state 27
    empty                          shift and go to state 28

state 16

    (13) procedure -> PROCEDURE_KW . IDENTIFIER parameters SEMICOLON declarations compound_statement SEMICOLON

    IDENTIFIER      shift and go to state 29


state 17

    (14) function -> FUNCTION_KW . IDENTIFIER parameters COLON type SEMICOLON declarations compound_statement SEMICOLON

    IDENTIFIER      shift and go to state 30


state 18

    (2) declarations -> VAR_KW declaration_list SEMICOLON .
    (5) declaration_list -> declaration_list SEMICOLON . identifier_list COLON type
    (6) identifier_list -> . IDENTIFIER
    (7) identifier_list -> . identifier_list COMMA IDENTIFIER

    BEGIN_KW        reduce using rule 2 (declarations -> VAR_KW declaration_list SEMICOLON .)
    PROCEDURE_KW    reduce using rule 2 (declarations -> VAR_KW declaration_list SEMICOLON .)
    FUNCTION_KW     reduce using rule 2 (declarations -> VAR_KW declaration_list SEMICOLON .)
    IDENTIFIER      shift and go to state 11

    identifier_list                shift and go to state 31

state 19

    (4) declaration_list -> identifier_list COLON . type
    (8) type -> . INTEGER_KW
    (9) type -> . REAL_KW

    INTEGER_KW      shift and go to state 33
    REAL_KW         shift and go to state 34

    type                           shift and go to state 32

state 20

    (7) identifier_list -> identifier_list COMMA . IDENTIFIER

    IDENTIFIER      shift and go to state 35


state 21

    (1) program -> PROGRAM_KW IDENTIFIER declarations procedure_list compound_statement DOT .

    $end            reduce using rule 1 (program -> PROGRAM_KW IDENTIFIER declarations procedure_list compound_statement DOT .)


state 22

    (17) compound_statement -> BEGIN_KW statement_list . END_KW
    (19) statement_list -> statement_list . SEMICOLON statement

    END_KW          shift and go to state 36
    SEMICOLON       shift and go to state 37


state 23

    (18) statement_list -> statement .

    END_KW          reduce using rule 18 (statement_list -> statement .)
    SEMICOLON       reduce using rule 18 (statement_list -> statement .)


state 24

    (20) statement -> IDENTIFIER . ASSIGN expression
    (25) statement -> IDENTIFIER . arguments
    (26) statement -> IDENTIFIER . ASSIGN IDENTIFIER arguments
    (28) arguments -> . LRB actual_parameter_list RRB

    ASSIGN          shift and go to state 38
    LRB             shift and go to state 40

    arguments                      shift and go to state 39

state 25

    (21) statement -> IF_KW . expression THEN_KW statement ELSE_KW statement
    (22) statement -> IF_KW . expression THEN_KW statement
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 41

state 26

    (23) statement -> WHILE_KW . expression DO_KW statement
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 48

state 27

    (24) statement -> compound_statement .

    END_KW          reduce using rule 24 (statement -> compound_statement .)
    SEMICOLON       reduce using rule 24 (statement -> compound_statement .)
    ELSE_KW         reduce using rule 24 (statement -> compound_statement .)


state 28

    (27) statement -> empty .

    END_KW          reduce using rule 27 (statement -> empty .)
    SEMICOLON       reduce using rule 27 (statement -> empty .)
    ELSE_KW         reduce using rule 27 (statement -> empty .)


state 29

    (13) procedure -> PROCEDURE_KW IDENTIFIER . parameters SEMICOLON declarations compound_statement SEMICOLON
    (15) parameters -> . LRB declaration_list RRB
    (16) parameters -> . empty
    (52) empty -> .

    LRB             shift and go to state 50
    SEMICOLON       reduce using rule 52 (empty -> .)

    parameters                     shift and go to state 49
    empty                          shift and go to state 51

state 30

    (14) function -> FUNCTION_KW IDENTIFIER . parameters COLON type SEMICOLON declarations compound_statement SEMICOLON
    (15) parameters -> . LRB declaration_list RRB
    (16) parameters -> . empty
    (52) empty -> .

    LRB             shift and go to state 50
    COLON           reduce using rule 52 (empty -> .)

    parameters                     shift and go to state 52
    empty                          shift and go to state 51

state 31

    (5) declaration_list -> declaration_list SEMICOLON identifier_list . COLON type
    (7) identifier_list -> identifier_list . COMMA IDENTIFIER

    COLON           shift and go to state 53
    COMMA           shift and go to state 20


state 32

    (4) declaration_list -> identifier_list COLON type .

    SEMICOLON       reduce using rule 4 (declaration_list -> identifier_list COLON type .)
    RRB             reduce using rule 4 (declaration_list -> identifier_list COLON type .)


state 33

    (8) type -> INTEGER_KW .

    SEMICOLON       reduce using rule 8 (type -> INTEGER_KW .)
    RRB             reduce using rule 8 (type -> INTEGER_KW .)


state 34

    (9) type -> REAL_KW .

    SEMICOLON       reduce using rule 9 (type -> REAL_KW .)
    RRB             reduce using rule 9 (type -> REAL_KW .)


state 35

    (7) identifier_list -> identifier_list COMMA IDENTIFIER .

    COLON           reduce using rule 7 (identifier_list -> identifier_list COMMA IDENTIFIER .)
    COMMA           reduce using rule 7 (identifier_list -> identifier_list COMMA IDENTIFIER .)


state 36

    (17) compound_statement -> BEGIN_KW statement_list END_KW .

    DOT             reduce using rule 17 (compound_statement -> BEGIN_KW statement_list END_KW .)
    END_KW          reduce using rule 17 (compound_statement -> BEGIN_KW statement_list END_KW .)
    SEMICOLON       reduce using rule 17 (compound_statement -> BEGIN_KW statement_list END_KW .)
    ELSE_KW         reduce using rule 17 (compound_statement -> BEGIN_KW statement_list END_KW .)


state 37

    (19) statement_list -> statement_list SEMICOLON . statement
    (20) statement -> . IDENTIFIER ASSIGN expression
    (21) statement -> . IF_KW expression THEN_KW statement ELSE_KW statement
    (22) statement -> . IF_KW expression THEN_KW statement
    (23) statement -> . WHILE_KW expression DO_KW statement
    (24) statement -> . compound_statement
    (25) statement -> . IDENTIFIER arguments
    (26) statement -> . IDENTIFIER ASSIGN IDENTIFIER arguments
    (27) statement -> . empty
    (17) compound_statement -> . BEGIN_KW statement_list END_KW
    (52) empty -> .

    IDENTIFIER      shift and go to state 24
    IF_KW           shift and go to state 25
    WHILE_KW        shift and go to state 26
    BEGIN_KW        shift and go to state 15
    END_KW          reduce using rule 52 (empty -> .)
    SEMICOLON       reduce using rule 52 (empty -> .)

    statement                      shift and go to state 54
    compound_statement             shift and go to state 27
    empty                          shift and go to state 28

state 38

    (20) statement -> IDENTIFIER ASSIGN . expression
    (26) statement -> IDENTIFIER ASSIGN . IDENTIFIER arguments
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    IDENTIFIER      shift and go to state 55
    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 56

state 39

    (25) statement -> IDENTIFIER arguments .

    END_KW          reduce using rule 25 (statement -> IDENTIFIER arguments .)
    SEMICOLON       reduce using rule 25 (statement -> IDENTIFIER arguments .)
    ELSE_KW         reduce using rule 25 (statement -> IDENTIFIER arguments .)


state 40

    (28) arguments -> LRB . actual_parameter_list RRB
    (29) actual_parameter_list -> . actual_parameter_list COMMA actual_parameter
    (30) actual_parameter_list -> . actual_parameter
    (31) actual_parameter -> . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    actual_parameter_list          shift and go to state 57
    actual_parameter               shift and go to state 58
    expression                     shift and go to state 59

state 41

    (21) statement -> IF_KW expression . THEN_KW statement ELSE_KW statement
    (22) statement -> IF_KW expression . THEN_KW statement
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         shift and go to state 60
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66
    LT              shift and go to state 67
    LE              shift and go to state 68
    EQ              shift and go to state 69
    NE              shift and go to state 70
    GT              shift and go to state 71
    GE              shift and go to state 72
    AND_KW          shift and go to state 73
    OR_KW           shift and go to state 74


state 42

    (32) expression -> INTEGER_CONSTANT .

    THEN_KW         reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    SUM             reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    SUB             reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    MUL             reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    DIV             reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    DIV_KW          reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    MOD_KW          reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    LT              reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    LE              reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    EQ              reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    NE              reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    GT              reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    GE              reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    AND_KW          reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    OR_KW           reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    DO_KW           reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    END_KW          reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    SEMICOLON       reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    ELSE_KW         reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    RRB             reduce using rule 32 (expression -> INTEGER_CONSTANT .)
    COMMA           reduce using rule 32 (expression -> INTEGER_CONSTANT .)


state 43

    (33) expression -> REAL_CONSTANT .

    THEN_KW         reduce using rule 33 (expression -> REAL_CONSTANT .)
    SUM             reduce using rule 33 (expression -> REAL_CONSTANT .)
    SUB             reduce using rule 33 (expression -> REAL_CONSTANT .)
    MUL             reduce using rule 33 (expression -> REAL_CONSTANT .)
    DIV             reduce using rule 33 (expression -> REAL_CONSTANT .)
    DIV_KW          reduce using rule 33 (expression -> REAL_CONSTANT .)
    MOD_KW          reduce using rule 33 (expression -> REAL_CONSTANT .)
    LT              reduce using rule 33 (expression -> REAL_CONSTANT .)
    LE              reduce using rule 33 (expression -> REAL_CONSTANT .)
    EQ              reduce using rule 33 (expression -> REAL_CONSTANT .)
    NE              reduce using rule 33 (expression -> REAL_CONSTANT .)
    GT              reduce using rule 33 (expression -> REAL_CONSTANT .)
    GE              reduce using rule 33 (expression -> REAL_CONSTANT .)
    AND_KW          reduce using rule 33 (expression -> REAL_CONSTANT .)
    OR_KW           reduce using rule 33 (expression -> REAL_CONSTANT .)
    DO_KW           reduce using rule 33 (expression -> REAL_CONSTANT .)
    END_KW          reduce using rule 33 (expression -> REAL_CONSTANT .)
    SEMICOLON       reduce using rule 33 (expression -> REAL_CONSTANT .)
    ELSE_KW         reduce using rule 33 (expression -> REAL_CONSTANT .)
    RRB             reduce using rule 33 (expression -> REAL_CONSTANT .)
    COMMA           reduce using rule 33 (expression -> REAL_CONSTANT .)


state 44

    (34) expression -> IDENTIFIER .

    THEN_KW         reduce using rule 34 (expression -> IDENTIFIER .)
    SUM             reduce using rule 34 (expression -> IDENTIFIER .)
    SUB             reduce using rule 34 (expression -> IDENTIFIER .)
    MUL             reduce using rule 34 (expression -> IDENTIFIER .)
    DIV             reduce using rule 34 (expression -> IDENTIFIER .)
    DIV_KW          reduce using rule 34 (expression -> IDENTIFIER .)
    MOD_KW          reduce using rule 34 (expression -> IDENTIFIER .)
    LT              reduce using rule 34 (expression -> IDENTIFIER .)
    LE              reduce using rule 34 (expression -> IDENTIFIER .)
    EQ              reduce using rule 34 (expression -> IDENTIFIER .)
    NE              reduce using rule 34 (expression -> IDENTIFIER .)
    GT              reduce using rule 34 (expression -> IDENTIFIER .)
    GE              reduce using rule 34 (expression -> IDENTIFIER .)
    AND_KW          reduce using rule 34 (expression -> IDENTIFIER .)
    OR_KW           reduce using rule 34 (expression -> IDENTIFIER .)
    DO_KW           reduce using rule 34 (expression -> IDENTIFIER .)
    RRB             reduce using rule 34 (expression -> IDENTIFIER .)
    COMMA           reduce using rule 34 (expression -> IDENTIFIER .)
    END_KW          reduce using rule 34 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 34 (expression -> IDENTIFIER .)
    ELSE_KW         reduce using rule 34 (expression -> IDENTIFIER .)


state 45

    (39) expression -> SUB . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 75

state 46

    (50) expression -> NOT_KW . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 76

state 47

    (51) expression -> LRB . expression RRB
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 77

state 48

    (23) statement -> WHILE_KW expression . DO_KW statement
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    DO_KW           shift and go to state 78
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66
    LT              shift and go to state 67
    LE              shift and go to state 68
    EQ              shift and go to state 69
    NE              shift and go to state 70
    GT              shift and go to state 71
    GE              shift and go to state 72
    AND_KW          shift and go to state 73
    OR_KW           shift and go to state 74


state 49

    (13) procedure -> PROCEDURE_KW IDENTIFIER parameters . SEMICOLON declarations compound_statement SEMICOLON

    SEMICOLON       shift and go to state 79


state 50

    (15) parameters -> LRB . declaration_list RRB
    (4) declaration_list -> . identifier_list COLON type
    (5) declaration_list -> . declaration_list SEMICOLON identifier_list COLON type
    (6) identifier_list -> . IDENTIFIER
    (7) identifier_list -> . identifier_list COMMA IDENTIFIER

    IDENTIFIER      shift and go to state 11

    declaration_list               shift and go to state 80
    identifier_list                shift and go to state 10

state 51

    (16) parameters -> empty .

    SEMICOLON       reduce using rule 16 (parameters -> empty .)
    COLON           reduce using rule 16 (parameters -> empty .)


state 52

    (14) function -> FUNCTION_KW IDENTIFIER parameters . COLON type SEMICOLON declarations compound_statement SEMICOLON

    COLON           shift and go to state 81


state 53

    (5) declaration_list -> declaration_list SEMICOLON identifier_list COLON . type
    (8) type -> . INTEGER_KW
    (9) type -> . REAL_KW

    INTEGER_KW      shift and go to state 33
    REAL_KW         shift and go to state 34

    type                           shift and go to state 82

state 54

    (19) statement_list -> statement_list SEMICOLON statement .

    END_KW          reduce using rule 19 (statement_list -> statement_list SEMICOLON statement .)
    SEMICOLON       reduce using rule 19 (statement_list -> statement_list SEMICOLON statement .)


state 55

    (26) statement -> IDENTIFIER ASSIGN IDENTIFIER . arguments
    (34) expression -> IDENTIFIER .
    (28) arguments -> . LRB actual_parameter_list RRB

    SUM             reduce using rule 34 (expression -> IDENTIFIER .)
    SUB             reduce using rule 34 (expression -> IDENTIFIER .)
    MUL             reduce using rule 34 (expression -> IDENTIFIER .)
    DIV             reduce using rule 34 (expression -> IDENTIFIER .)
    DIV_KW          reduce using rule 34 (expression -> IDENTIFIER .)
    MOD_KW          reduce using rule 34 (expression -> IDENTIFIER .)
    LT              reduce using rule 34 (expression -> IDENTIFIER .)
    LE              reduce using rule 34 (expression -> IDENTIFIER .)
    EQ              reduce using rule 34 (expression -> IDENTIFIER .)
    NE              reduce using rule 34 (expression -> IDENTIFIER .)
    GT              reduce using rule 34 (expression -> IDENTIFIER .)
    GE              reduce using rule 34 (expression -> IDENTIFIER .)
    AND_KW          reduce using rule 34 (expression -> IDENTIFIER .)
    OR_KW           reduce using rule 34 (expression -> IDENTIFIER .)
    END_KW          reduce using rule 34 (expression -> IDENTIFIER .)
    SEMICOLON       reduce using rule 34 (expression -> IDENTIFIER .)
    ELSE_KW         reduce using rule 34 (expression -> IDENTIFIER .)
    LRB             shift and go to state 40

    arguments                      shift and go to state 83

state 56

    (20) statement -> IDENTIFIER ASSIGN expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    END_KW          reduce using rule 20 (statement -> IDENTIFIER ASSIGN expression .)
    SEMICOLON       reduce using rule 20 (statement -> IDENTIFIER ASSIGN expression .)
    ELSE_KW         reduce using rule 20 (statement -> IDENTIFIER ASSIGN expression .)
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66
    LT              shift and go to state 67
    LE              shift and go to state 68
    EQ              shift and go to state 69
    NE              shift and go to state 70
    GT              shift and go to state 71
    GE              shift and go to state 72
    AND_KW          shift and go to state 73
    OR_KW           shift and go to state 74


state 57

    (28) arguments -> LRB actual_parameter_list . RRB
    (29) actual_parameter_list -> actual_parameter_list . COMMA actual_parameter

    RRB             shift and go to state 84
    COMMA           shift and go to state 85


state 58

    (30) actual_parameter_list -> actual_parameter .

    RRB             reduce using rule 30 (actual_parameter_list -> actual_parameter .)
    COMMA           reduce using rule 30 (actual_parameter_list -> actual_parameter .)


state 59

    (31) actual_parameter -> expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    RRB             reduce using rule 31 (actual_parameter -> expression .)
    COMMA           reduce using rule 31 (actual_parameter -> expression .)
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66
    LT              shift and go to state 67
    LE              shift and go to state 68
    EQ              shift and go to state 69
    NE              shift and go to state 70
    GT              shift and go to state 71
    GE              shift and go to state 72
    AND_KW          shift and go to state 73
    OR_KW           shift and go to state 74


state 60

    (21) statement -> IF_KW expression THEN_KW . statement ELSE_KW statement
    (22) statement -> IF_KW expression THEN_KW . statement
    (20) statement -> . IDENTIFIER ASSIGN expression
    (21) statement -> . IF_KW expression THEN_KW statement ELSE_KW statement
    (22) statement -> . IF_KW expression THEN_KW statement
    (23) statement -> . WHILE_KW expression DO_KW statement
    (24) statement -> . compound_statement
    (25) statement -> . IDENTIFIER arguments
    (26) statement -> . IDENTIFIER ASSIGN IDENTIFIER arguments
    (27) statement -> . empty
    (17) compound_statement -> . BEGIN_KW statement_list END_KW
    (52) empty -> .

    IDENTIFIER      shift and go to state 24
    IF_KW           shift and go to state 25
    WHILE_KW        shift and go to state 26
    BEGIN_KW        shift and go to state 15
    ELSE_KW         reduce using rule 52 (empty -> .)
    END_KW          reduce using rule 52 (empty -> .)
    SEMICOLON       reduce using rule 52 (empty -> .)

    statement                      shift and go to state 86
    compound_statement             shift and go to state 27
    empty                          shift and go to state 28

state 61

    (35) expression -> expression SUM . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 87

state 62

    (36) expression -> expression SUB . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 88

state 63

    (37) expression -> expression MUL . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 89

state 64

    (38) expression -> expression DIV . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 90

state 65

    (40) expression -> expression DIV_KW . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 91

state 66

    (41) expression -> expression MOD_KW . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 92

state 67

    (42) expression -> expression LT . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 93

state 68

    (43) expression -> expression LE . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 94

state 69

    (44) expression -> expression EQ . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 95

state 70

    (45) expression -> expression NE . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 96

state 71

    (46) expression -> expression GT . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 97

state 72

    (47) expression -> expression GE . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 98

state 73

    (48) expression -> expression AND_KW . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 99

state 74

    (49) expression -> expression OR_KW . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    expression                     shift and go to state 100

state 75

    (39) expression -> SUB expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 39 (expression -> SUB expression .)
    SUM             reduce using rule 39 (expression -> SUB expression .)
    SUB             reduce using rule 39 (expression -> SUB expression .)
    LT              reduce using rule 39 (expression -> SUB expression .)
    LE              reduce using rule 39 (expression -> SUB expression .)
    EQ              reduce using rule 39 (expression -> SUB expression .)
    NE              reduce using rule 39 (expression -> SUB expression .)
    GT              reduce using rule 39 (expression -> SUB expression .)
    GE              reduce using rule 39 (expression -> SUB expression .)
    AND_KW          reduce using rule 39 (expression -> SUB expression .)
    OR_KW           reduce using rule 39 (expression -> SUB expression .)
    DO_KW           reduce using rule 39 (expression -> SUB expression .)
    END_KW          reduce using rule 39 (expression -> SUB expression .)
    SEMICOLON       reduce using rule 39 (expression -> SUB expression .)
    ELSE_KW         reduce using rule 39 (expression -> SUB expression .)
    RRB             reduce using rule 39 (expression -> SUB expression .)
    COMMA           reduce using rule 39 (expression -> SUB expression .)
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66

  ! MUL             [ reduce using rule 39 (expression -> SUB expression .) ]
  ! DIV             [ reduce using rule 39 (expression -> SUB expression .) ]
  ! DIV_KW          [ reduce using rule 39 (expression -> SUB expression .) ]
  ! MOD_KW          [ reduce using rule 39 (expression -> SUB expression .) ]
  ! SUM             [ shift and go to state 61 ]
  ! SUB             [ shift and go to state 62 ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 76

    (50) expression -> NOT_KW expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 50 (expression -> NOT_KW expression .)
    AND_KW          reduce using rule 50 (expression -> NOT_KW expression .)
    OR_KW           reduce using rule 50 (expression -> NOT_KW expression .)
    DO_KW           reduce using rule 50 (expression -> NOT_KW expression .)
    END_KW          reduce using rule 50 (expression -> NOT_KW expression .)
    SEMICOLON       reduce using rule 50 (expression -> NOT_KW expression .)
    ELSE_KW         reduce using rule 50 (expression -> NOT_KW expression .)
    RRB             reduce using rule 50 (expression -> NOT_KW expression .)
    COMMA           reduce using rule 50 (expression -> NOT_KW expression .)
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66
    LT              shift and go to state 67
    LE              shift and go to state 68
    EQ              shift and go to state 69
    NE              shift and go to state 70
    GT              shift and go to state 71
    GE              shift and go to state 72

  ! SUM             [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! SUB             [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! MUL             [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! DIV             [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! DIV_KW          [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! MOD_KW          [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! LT              [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! LE              [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! EQ              [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! NE              [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! GT              [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! GE              [ reduce using rule 50 (expression -> NOT_KW expression .) ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 77

    (51) expression -> LRB expression . RRB
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    RRB             shift and go to state 101
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66
    LT              shift and go to state 67
    LE              shift and go to state 68
    EQ              shift and go to state 69
    NE              shift and go to state 70
    GT              shift and go to state 71
    GE              shift and go to state 72
    AND_KW          shift and go to state 73
    OR_KW           shift and go to state 74


state 78

    (23) statement -> WHILE_KW expression DO_KW . statement
    (20) statement -> . IDENTIFIER ASSIGN expression
    (21) statement -> . IF_KW expression THEN_KW statement ELSE_KW statement
    (22) statement -> . IF_KW expression THEN_KW statement
    (23) statement -> . WHILE_KW expression DO_KW statement
    (24) statement -> . compound_statement
    (25) statement -> . IDENTIFIER arguments
    (26) statement -> . IDENTIFIER ASSIGN IDENTIFIER arguments
    (27) statement -> . empty
    (17) compound_statement -> . BEGIN_KW statement_list END_KW
    (52) empty -> .

    IDENTIFIER      shift and go to state 24
    IF_KW           shift and go to state 25
    WHILE_KW        shift and go to state 26
    BEGIN_KW        shift and go to state 15
    ELSE_KW         reduce using rule 52 (empty -> .)
    END_KW          reduce using rule 52 (empty -> .)
    SEMICOLON       reduce using rule 52 (empty -> .)

    statement                      shift and go to state 102
    compound_statement             shift and go to state 27
    empty                          shift and go to state 28

state 79

    (13) procedure -> PROCEDURE_KW IDENTIFIER parameters SEMICOLON . declarations compound_statement SEMICOLON
    (2) declarations -> . VAR_KW declaration_list SEMICOLON
    (3) declarations -> . empty
    (52) empty -> .

    VAR_KW          shift and go to state 5
    BEGIN_KW        reduce using rule 52 (empty -> .)

    declarations                   shift and go to state 103
    empty                          shift and go to state 6

state 80

    (15) parameters -> LRB declaration_list . RRB
    (5) declaration_list -> declaration_list . SEMICOLON identifier_list COLON type

    RRB             shift and go to state 104
    SEMICOLON       shift and go to state 105


state 81

    (14) function -> FUNCTION_KW IDENTIFIER parameters COLON . type SEMICOLON declarations compound_statement SEMICOLON
    (8) type -> . INTEGER_KW
    (9) type -> . REAL_KW

    INTEGER_KW      shift and go to state 33
    REAL_KW         shift and go to state 34

    type                           shift and go to state 106

state 82

    (5) declaration_list -> declaration_list SEMICOLON identifier_list COLON type .

    SEMICOLON       reduce using rule 5 (declaration_list -> declaration_list SEMICOLON identifier_list COLON type .)
    RRB             reduce using rule 5 (declaration_list -> declaration_list SEMICOLON identifier_list COLON type .)


state 83

    (26) statement -> IDENTIFIER ASSIGN IDENTIFIER arguments .

    END_KW          reduce using rule 26 (statement -> IDENTIFIER ASSIGN IDENTIFIER arguments .)
    SEMICOLON       reduce using rule 26 (statement -> IDENTIFIER ASSIGN IDENTIFIER arguments .)
    ELSE_KW         reduce using rule 26 (statement -> IDENTIFIER ASSIGN IDENTIFIER arguments .)


state 84

    (28) arguments -> LRB actual_parameter_list RRB .

    END_KW          reduce using rule 28 (arguments -> LRB actual_parameter_list RRB .)
    SEMICOLON       reduce using rule 28 (arguments -> LRB actual_parameter_list RRB .)
    ELSE_KW         reduce using rule 28 (arguments -> LRB actual_parameter_list RRB .)


state 85

    (29) actual_parameter_list -> actual_parameter_list COMMA . actual_parameter
    (31) actual_parameter -> . expression
    (32) expression -> . INTEGER_CONSTANT
    (33) expression -> . REAL_CONSTANT
    (34) expression -> . IDENTIFIER
    (35) expression -> . expression SUM expression
    (36) expression -> . expression SUB expression
    (37) expression -> . expression MUL expression
    (38) expression -> . expression DIV expression
    (39) expression -> . SUB expression
    (40) expression -> . expression DIV_KW expression
    (41) expression -> . expression MOD_KW expression
    (42) expression -> . expression LT expression
    (43) expression -> . expression LE expression
    (44) expression -> . expression EQ expression
    (45) expression -> . expression NE expression
    (46) expression -> . expression GT expression
    (47) expression -> . expression GE expression
    (48) expression -> . expression AND_KW expression
    (49) expression -> . expression OR_KW expression
    (50) expression -> . NOT_KW expression
    (51) expression -> . LRB expression RRB

    INTEGER_CONSTANT shift and go to state 42
    REAL_CONSTANT   shift and go to state 43
    IDENTIFIER      shift and go to state 44
    SUB             shift and go to state 45
    NOT_KW          shift and go to state 46
    LRB             shift and go to state 47

    actual_parameter               shift and go to state 107
    expression                     shift and go to state 59

state 86

    (21) statement -> IF_KW expression THEN_KW statement . ELSE_KW statement
    (22) statement -> IF_KW expression THEN_KW statement .

    ELSE_KW         shift and go to state 108
    END_KW          reduce using rule 22 (statement -> IF_KW expression THEN_KW statement .)
    SEMICOLON       reduce using rule 22 (statement -> IF_KW expression THEN_KW statement .)

  ! ELSE_KW         [ reduce using rule 22 (statement -> IF_KW expression THEN_KW statement .) ]


state 87

    (35) expression -> expression SUM expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 35 (expression -> expression SUM expression .)
    SUM             reduce using rule 35 (expression -> expression SUM expression .)
    SUB             reduce using rule 35 (expression -> expression SUM expression .)
    LT              reduce using rule 35 (expression -> expression SUM expression .)
    LE              reduce using rule 35 (expression -> expression SUM expression .)
    EQ              reduce using rule 35 (expression -> expression SUM expression .)
    NE              reduce using rule 35 (expression -> expression SUM expression .)
    GT              reduce using rule 35 (expression -> expression SUM expression .)
    GE              reduce using rule 35 (expression -> expression SUM expression .)
    AND_KW          reduce using rule 35 (expression -> expression SUM expression .)
    OR_KW           reduce using rule 35 (expression -> expression SUM expression .)
    DO_KW           reduce using rule 35 (expression -> expression SUM expression .)
    END_KW          reduce using rule 35 (expression -> expression SUM expression .)
    SEMICOLON       reduce using rule 35 (expression -> expression SUM expression .)
    ELSE_KW         reduce using rule 35 (expression -> expression SUM expression .)
    RRB             reduce using rule 35 (expression -> expression SUM expression .)
    COMMA           reduce using rule 35 (expression -> expression SUM expression .)
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66

  ! MUL             [ reduce using rule 35 (expression -> expression SUM expression .) ]
  ! DIV             [ reduce using rule 35 (expression -> expression SUM expression .) ]
  ! DIV_KW          [ reduce using rule 35 (expression -> expression SUM expression .) ]
  ! MOD_KW          [ reduce using rule 35 (expression -> expression SUM expression .) ]
  ! SUM             [ shift and go to state 61 ]
  ! SUB             [ shift and go to state 62 ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 88

    (36) expression -> expression SUB expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 36 (expression -> expression SUB expression .)
    SUM             reduce using rule 36 (expression -> expression SUB expression .)
    SUB             reduce using rule 36 (expression -> expression SUB expression .)
    LT              reduce using rule 36 (expression -> expression SUB expression .)
    LE              reduce using rule 36 (expression -> expression SUB expression .)
    EQ              reduce using rule 36 (expression -> expression SUB expression .)
    NE              reduce using rule 36 (expression -> expression SUB expression .)
    GT              reduce using rule 36 (expression -> expression SUB expression .)
    GE              reduce using rule 36 (expression -> expression SUB expression .)
    AND_KW          reduce using rule 36 (expression -> expression SUB expression .)
    OR_KW           reduce using rule 36 (expression -> expression SUB expression .)
    DO_KW           reduce using rule 36 (expression -> expression SUB expression .)
    END_KW          reduce using rule 36 (expression -> expression SUB expression .)
    SEMICOLON       reduce using rule 36 (expression -> expression SUB expression .)
    ELSE_KW         reduce using rule 36 (expression -> expression SUB expression .)
    RRB             reduce using rule 36 (expression -> expression SUB expression .)
    COMMA           reduce using rule 36 (expression -> expression SUB expression .)
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66

  ! MUL             [ reduce using rule 36 (expression -> expression SUB expression .) ]
  ! DIV             [ reduce using rule 36 (expression -> expression SUB expression .) ]
  ! DIV_KW          [ reduce using rule 36 (expression -> expression SUB expression .) ]
  ! MOD_KW          [ reduce using rule 36 (expression -> expression SUB expression .) ]
  ! SUM             [ shift and go to state 61 ]
  ! SUB             [ shift and go to state 62 ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 89

    (37) expression -> expression MUL expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 37 (expression -> expression MUL expression .)
    SUM             reduce using rule 37 (expression -> expression MUL expression .)
    SUB             reduce using rule 37 (expression -> expression MUL expression .)
    MUL             reduce using rule 37 (expression -> expression MUL expression .)
    DIV             reduce using rule 37 (expression -> expression MUL expression .)
    DIV_KW          reduce using rule 37 (expression -> expression MUL expression .)
    MOD_KW          reduce using rule 37 (expression -> expression MUL expression .)
    LT              reduce using rule 37 (expression -> expression MUL expression .)
    LE              reduce using rule 37 (expression -> expression MUL expression .)
    EQ              reduce using rule 37 (expression -> expression MUL expression .)
    NE              reduce using rule 37 (expression -> expression MUL expression .)
    GT              reduce using rule 37 (expression -> expression MUL expression .)
    GE              reduce using rule 37 (expression -> expression MUL expression .)
    AND_KW          reduce using rule 37 (expression -> expression MUL expression .)
    OR_KW           reduce using rule 37 (expression -> expression MUL expression .)
    DO_KW           reduce using rule 37 (expression -> expression MUL expression .)
    END_KW          reduce using rule 37 (expression -> expression MUL expression .)
    SEMICOLON       reduce using rule 37 (expression -> expression MUL expression .)
    ELSE_KW         reduce using rule 37 (expression -> expression MUL expression .)
    RRB             reduce using rule 37 (expression -> expression MUL expression .)
    COMMA           reduce using rule 37 (expression -> expression MUL expression .)

  ! SUM             [ shift and go to state 61 ]
  ! SUB             [ shift and go to state 62 ]
  ! MUL             [ shift and go to state 63 ]
  ! DIV             [ shift and go to state 64 ]
  ! DIV_KW          [ shift and go to state 65 ]
  ! MOD_KW          [ shift and go to state 66 ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 90

    (38) expression -> expression DIV expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 38 (expression -> expression DIV expression .)
    SUM             reduce using rule 38 (expression -> expression DIV expression .)
    SUB             reduce using rule 38 (expression -> expression DIV expression .)
    MUL             reduce using rule 38 (expression -> expression DIV expression .)
    DIV             reduce using rule 38 (expression -> expression DIV expression .)
    DIV_KW          reduce using rule 38 (expression -> expression DIV expression .)
    MOD_KW          reduce using rule 38 (expression -> expression DIV expression .)
    LT              reduce using rule 38 (expression -> expression DIV expression .)
    LE              reduce using rule 38 (expression -> expression DIV expression .)
    EQ              reduce using rule 38 (expression -> expression DIV expression .)
    NE              reduce using rule 38 (expression -> expression DIV expression .)
    GT              reduce using rule 38 (expression -> expression DIV expression .)
    GE              reduce using rule 38 (expression -> expression DIV expression .)
    AND_KW          reduce using rule 38 (expression -> expression DIV expression .)
    OR_KW           reduce using rule 38 (expression -> expression DIV expression .)
    DO_KW           reduce using rule 38 (expression -> expression DIV expression .)
    END_KW          reduce using rule 38 (expression -> expression DIV expression .)
    SEMICOLON       reduce using rule 38 (expression -> expression DIV expression .)
    ELSE_KW         reduce using rule 38 (expression -> expression DIV expression .)
    RRB             reduce using rule 38 (expression -> expression DIV expression .)
    COMMA           reduce using rule 38 (expression -> expression DIV expression .)

  ! SUM             [ shift and go to state 61 ]
  ! SUB             [ shift and go to state 62 ]
  ! MUL             [ shift and go to state 63 ]
  ! DIV             [ shift and go to state 64 ]
  ! DIV_KW          [ shift and go to state 65 ]
  ! MOD_KW          [ shift and go to state 66 ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 91

    (40) expression -> expression DIV_KW expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 40 (expression -> expression DIV_KW expression .)
    SUM             reduce using rule 40 (expression -> expression DIV_KW expression .)
    SUB             reduce using rule 40 (expression -> expression DIV_KW expression .)
    MUL             reduce using rule 40 (expression -> expression DIV_KW expression .)
    DIV             reduce using rule 40 (expression -> expression DIV_KW expression .)
    DIV_KW          reduce using rule 40 (expression -> expression DIV_KW expression .)
    MOD_KW          reduce using rule 40 (expression -> expression DIV_KW expression .)
    LT              reduce using rule 40 (expression -> expression DIV_KW expression .)
    LE              reduce using rule 40 (expression -> expression DIV_KW expression .)
    EQ              reduce using rule 40 (expression -> expression DIV_KW expression .)
    NE              reduce using rule 40 (expression -> expression DIV_KW expression .)
    GT              reduce using rule 40 (expression -> expression DIV_KW expression .)
    GE              reduce using rule 40 (expression -> expression DIV_KW expression .)
    AND_KW          reduce using rule 40 (expression -> expression DIV_KW expression .)
    OR_KW           reduce using rule 40 (expression -> expression DIV_KW expression .)
    DO_KW           reduce using rule 40 (expression -> expression DIV_KW expression .)
    END_KW          reduce using rule 40 (expression -> expression DIV_KW expression .)
    SEMICOLON       reduce using rule 40 (expression -> expression DIV_KW expression .)
    ELSE_KW         reduce using rule 40 (expression -> expression DIV_KW expression .)
    RRB             reduce using rule 40 (expression -> expression DIV_KW expression .)
    COMMA           reduce using rule 40 (expression -> expression DIV_KW expression .)

  ! SUM             [ shift and go to state 61 ]
  ! SUB             [ shift and go to state 62 ]
  ! MUL             [ shift and go to state 63 ]
  ! DIV             [ shift and go to state 64 ]
  ! DIV_KW          [ shift and go to state 65 ]
  ! MOD_KW          [ shift and go to state 66 ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 92

    (41) expression -> expression MOD_KW expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 41 (expression -> expression MOD_KW expression .)
    SUM             reduce using rule 41 (expression -> expression MOD_KW expression .)
    SUB             reduce using rule 41 (expression -> expression MOD_KW expression .)
    MUL             reduce using rule 41 (expression -> expression MOD_KW expression .)
    DIV             reduce using rule 41 (expression -> expression MOD_KW expression .)
    DIV_KW          reduce using rule 41 (expression -> expression MOD_KW expression .)
    MOD_KW          reduce using rule 41 (expression -> expression MOD_KW expression .)
    LT              reduce using rule 41 (expression -> expression MOD_KW expression .)
    LE              reduce using rule 41 (expression -> expression MOD_KW expression .)
    EQ              reduce using rule 41 (expression -> expression MOD_KW expression .)
    NE              reduce using rule 41 (expression -> expression MOD_KW expression .)
    GT              reduce using rule 41 (expression -> expression MOD_KW expression .)
    GE              reduce using rule 41 (expression -> expression MOD_KW expression .)
    AND_KW          reduce using rule 41 (expression -> expression MOD_KW expression .)
    OR_KW           reduce using rule 41 (expression -> expression MOD_KW expression .)
    DO_KW           reduce using rule 41 (expression -> expression MOD_KW expression .)
    END_KW          reduce using rule 41 (expression -> expression MOD_KW expression .)
    SEMICOLON       reduce using rule 41 (expression -> expression MOD_KW expression .)
    ELSE_KW         reduce using rule 41 (expression -> expression MOD_KW expression .)
    RRB             reduce using rule 41 (expression -> expression MOD_KW expression .)
    COMMA           reduce using rule 41 (expression -> expression MOD_KW expression .)

  ! SUM             [ shift and go to state 61 ]
  ! SUB             [ shift and go to state 62 ]
  ! MUL             [ shift and go to state 63 ]
  ! DIV             [ shift and go to state 64 ]
  ! DIV_KW          [ shift and go to state 65 ]
  ! MOD_KW          [ shift and go to state 66 ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 93

    (42) expression -> expression LT expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 42 (expression -> expression LT expression .)
    LT              reduce using rule 42 (expression -> expression LT expression .)
    LE              reduce using rule 42 (expression -> expression LT expression .)
    EQ              reduce using rule 42 (expression -> expression LT expression .)
    NE              reduce using rule 42 (expression -> expression LT expression .)
    GT              reduce using rule 42 (expression -> expression LT expression .)
    GE              reduce using rule 42 (expression -> expression LT expression .)
    AND_KW          reduce using rule 42 (expression -> expression LT expression .)
    OR_KW           reduce using rule 42 (expression -> expression LT expression .)
    DO_KW           reduce using rule 42 (expression -> expression LT expression .)
    END_KW          reduce using rule 42 (expression -> expression LT expression .)
    SEMICOLON       reduce using rule 42 (expression -> expression LT expression .)
    ELSE_KW         reduce using rule 42 (expression -> expression LT expression .)
    RRB             reduce using rule 42 (expression -> expression LT expression .)
    COMMA           reduce using rule 42 (expression -> expression LT expression .)
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66

  ! SUM             [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! SUB             [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! MUL             [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! DIV             [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! DIV_KW          [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! MOD_KW          [ reduce using rule 42 (expression -> expression LT expression .) ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 94

    (43) expression -> expression LE expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 43 (expression -> expression LE expression .)
    LT              reduce using rule 43 (expression -> expression LE expression .)
    LE              reduce using rule 43 (expression -> expression LE expression .)
    EQ              reduce using rule 43 (expression -> expression LE expression .)
    NE              reduce using rule 43 (expression -> expression LE expression .)
    GT              reduce using rule 43 (expression -> expression LE expression .)
    GE              reduce using rule 43 (expression -> expression LE expression .)
    AND_KW          reduce using rule 43 (expression -> expression LE expression .)
    OR_KW           reduce using rule 43 (expression -> expression LE expression .)
    DO_KW           reduce using rule 43 (expression -> expression LE expression .)
    END_KW          reduce using rule 43 (expression -> expression LE expression .)
    SEMICOLON       reduce using rule 43 (expression -> expression LE expression .)
    ELSE_KW         reduce using rule 43 (expression -> expression LE expression .)
    RRB             reduce using rule 43 (expression -> expression LE expression .)
    COMMA           reduce using rule 43 (expression -> expression LE expression .)
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66

  ! SUM             [ reduce using rule 43 (expression -> expression LE expression .) ]
  ! SUB             [ reduce using rule 43 (expression -> expression LE expression .) ]
  ! MUL             [ reduce using rule 43 (expression -> expression LE expression .) ]
  ! DIV             [ reduce using rule 43 (expression -> expression LE expression .) ]
  ! DIV_KW          [ reduce using rule 43 (expression -> expression LE expression .) ]
  ! MOD_KW          [ reduce using rule 43 (expression -> expression LE expression .) ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 95

    (44) expression -> expression EQ expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 44 (expression -> expression EQ expression .)
    LT              reduce using rule 44 (expression -> expression EQ expression .)
    LE              reduce using rule 44 (expression -> expression EQ expression .)
    EQ              reduce using rule 44 (expression -> expression EQ expression .)
    NE              reduce using rule 44 (expression -> expression EQ expression .)
    GT              reduce using rule 44 (expression -> expression EQ expression .)
    GE              reduce using rule 44 (expression -> expression EQ expression .)
    AND_KW          reduce using rule 44 (expression -> expression EQ expression .)
    OR_KW           reduce using rule 44 (expression -> expression EQ expression .)
    DO_KW           reduce using rule 44 (expression -> expression EQ expression .)
    END_KW          reduce using rule 44 (expression -> expression EQ expression .)
    SEMICOLON       reduce using rule 44 (expression -> expression EQ expression .)
    ELSE_KW         reduce using rule 44 (expression -> expression EQ expression .)
    RRB             reduce using rule 44 (expression -> expression EQ expression .)
    COMMA           reduce using rule 44 (expression -> expression EQ expression .)
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66

  ! SUM             [ reduce using rule 44 (expression -> expression EQ expression .) ]
  ! SUB             [ reduce using rule 44 (expression -> expression EQ expression .) ]
  ! MUL             [ reduce using rule 44 (expression -> expression EQ expression .) ]
  ! DIV             [ reduce using rule 44 (expression -> expression EQ expression .) ]
  ! DIV_KW          [ reduce using rule 44 (expression -> expression EQ expression .) ]
  ! MOD_KW          [ reduce using rule 44 (expression -> expression EQ expression .) ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 96

    (45) expression -> expression NE expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 45 (expression -> expression NE expression .)
    LT              reduce using rule 45 (expression -> expression NE expression .)
    LE              reduce using rule 45 (expression -> expression NE expression .)
    EQ              reduce using rule 45 (expression -> expression NE expression .)
    NE              reduce using rule 45 (expression -> expression NE expression .)
    GT              reduce using rule 45 (expression -> expression NE expression .)
    GE              reduce using rule 45 (expression -> expression NE expression .)
    AND_KW          reduce using rule 45 (expression -> expression NE expression .)
    OR_KW           reduce using rule 45 (expression -> expression NE expression .)
    DO_KW           reduce using rule 45 (expression -> expression NE expression .)
    END_KW          reduce using rule 45 (expression -> expression NE expression .)
    SEMICOLON       reduce using rule 45 (expression -> expression NE expression .)
    ELSE_KW         reduce using rule 45 (expression -> expression NE expression .)
    RRB             reduce using rule 45 (expression -> expression NE expression .)
    COMMA           reduce using rule 45 (expression -> expression NE expression .)
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66

  ! SUM             [ reduce using rule 45 (expression -> expression NE expression .) ]
  ! SUB             [ reduce using rule 45 (expression -> expression NE expression .) ]
  ! MUL             [ reduce using rule 45 (expression -> expression NE expression .) ]
  ! DIV             [ reduce using rule 45 (expression -> expression NE expression .) ]
  ! DIV_KW          [ reduce using rule 45 (expression -> expression NE expression .) ]
  ! MOD_KW          [ reduce using rule 45 (expression -> expression NE expression .) ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 97

    (46) expression -> expression GT expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 46 (expression -> expression GT expression .)
    LT              reduce using rule 46 (expression -> expression GT expression .)
    LE              reduce using rule 46 (expression -> expression GT expression .)
    EQ              reduce using rule 46 (expression -> expression GT expression .)
    NE              reduce using rule 46 (expression -> expression GT expression .)
    GT              reduce using rule 46 (expression -> expression GT expression .)
    GE              reduce using rule 46 (expression -> expression GT expression .)
    AND_KW          reduce using rule 46 (expression -> expression GT expression .)
    OR_KW           reduce using rule 46 (expression -> expression GT expression .)
    DO_KW           reduce using rule 46 (expression -> expression GT expression .)
    END_KW          reduce using rule 46 (expression -> expression GT expression .)
    SEMICOLON       reduce using rule 46 (expression -> expression GT expression .)
    ELSE_KW         reduce using rule 46 (expression -> expression GT expression .)
    RRB             reduce using rule 46 (expression -> expression GT expression .)
    COMMA           reduce using rule 46 (expression -> expression GT expression .)
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66

  ! SUM             [ reduce using rule 46 (expression -> expression GT expression .) ]
  ! SUB             [ reduce using rule 46 (expression -> expression GT expression .) ]
  ! MUL             [ reduce using rule 46 (expression -> expression GT expression .) ]
  ! DIV             [ reduce using rule 46 (expression -> expression GT expression .) ]
  ! DIV_KW          [ reduce using rule 46 (expression -> expression GT expression .) ]
  ! MOD_KW          [ reduce using rule 46 (expression -> expression GT expression .) ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 98

    (47) expression -> expression GE expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 47 (expression -> expression GE expression .)
    LT              reduce using rule 47 (expression -> expression GE expression .)
    LE              reduce using rule 47 (expression -> expression GE expression .)
    EQ              reduce using rule 47 (expression -> expression GE expression .)
    NE              reduce using rule 47 (expression -> expression GE expression .)
    GT              reduce using rule 47 (expression -> expression GE expression .)
    GE              reduce using rule 47 (expression -> expression GE expression .)
    AND_KW          reduce using rule 47 (expression -> expression GE expression .)
    OR_KW           reduce using rule 47 (expression -> expression GE expression .)
    DO_KW           reduce using rule 47 (expression -> expression GE expression .)
    END_KW          reduce using rule 47 (expression -> expression GE expression .)
    SEMICOLON       reduce using rule 47 (expression -> expression GE expression .)
    ELSE_KW         reduce using rule 47 (expression -> expression GE expression .)
    RRB             reduce using rule 47 (expression -> expression GE expression .)
    COMMA           reduce using rule 47 (expression -> expression GE expression .)
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66

  ! SUM             [ reduce using rule 47 (expression -> expression GE expression .) ]
  ! SUB             [ reduce using rule 47 (expression -> expression GE expression .) ]
  ! MUL             [ reduce using rule 47 (expression -> expression GE expression .) ]
  ! DIV             [ reduce using rule 47 (expression -> expression GE expression .) ]
  ! DIV_KW          [ reduce using rule 47 (expression -> expression GE expression .) ]
  ! MOD_KW          [ reduce using rule 47 (expression -> expression GE expression .) ]
  ! LT              [ shift and go to state 67 ]
  ! LE              [ shift and go to state 68 ]
  ! EQ              [ shift and go to state 69 ]
  ! NE              [ shift and go to state 70 ]
  ! GT              [ shift and go to state 71 ]
  ! GE              [ shift and go to state 72 ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 99

    (48) expression -> expression AND_KW expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 48 (expression -> expression AND_KW expression .)
    AND_KW          reduce using rule 48 (expression -> expression AND_KW expression .)
    OR_KW           reduce using rule 48 (expression -> expression AND_KW expression .)
    DO_KW           reduce using rule 48 (expression -> expression AND_KW expression .)
    END_KW          reduce using rule 48 (expression -> expression AND_KW expression .)
    SEMICOLON       reduce using rule 48 (expression -> expression AND_KW expression .)
    ELSE_KW         reduce using rule 48 (expression -> expression AND_KW expression .)
    RRB             reduce using rule 48 (expression -> expression AND_KW expression .)
    COMMA           reduce using rule 48 (expression -> expression AND_KW expression .)
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66
    LT              shift and go to state 67
    LE              shift and go to state 68
    EQ              shift and go to state 69
    NE              shift and go to state 70
    GT              shift and go to state 71
    GE              shift and go to state 72

  ! SUM             [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! SUB             [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! MUL             [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! DIV             [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! DIV_KW          [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! MOD_KW          [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! LT              [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! LE              [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! EQ              [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! NE              [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! GT              [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! GE              [ reduce using rule 48 (expression -> expression AND_KW expression .) ]
  ! AND_KW          [ shift and go to state 73 ]
  ! OR_KW           [ shift and go to state 74 ]


state 100

    (49) expression -> expression OR_KW expression .
    (35) expression -> expression . SUM expression
    (36) expression -> expression . SUB expression
    (37) expression -> expression . MUL expression
    (38) expression -> expression . DIV expression
    (40) expression -> expression . DIV_KW expression
    (41) expression -> expression . MOD_KW expression
    (42) expression -> expression . LT expression
    (43) expression -> expression . LE expression
    (44) expression -> expression . EQ expression
    (45) expression -> expression . NE expression
    (46) expression -> expression . GT expression
    (47) expression -> expression . GE expression
    (48) expression -> expression . AND_KW expression
    (49) expression -> expression . OR_KW expression

    THEN_KW         reduce using rule 49 (expression -> expression OR_KW expression .)
    OR_KW           reduce using rule 49 (expression -> expression OR_KW expression .)
    DO_KW           reduce using rule 49 (expression -> expression OR_KW expression .)
    END_KW          reduce using rule 49 (expression -> expression OR_KW expression .)
    SEMICOLON       reduce using rule 49 (expression -> expression OR_KW expression .)
    ELSE_KW         reduce using rule 49 (expression -> expression OR_KW expression .)
    RRB             reduce using rule 49 (expression -> expression OR_KW expression .)
    COMMA           reduce using rule 49 (expression -> expression OR_KW expression .)
    SUM             shift and go to state 61
    SUB             shift and go to state 62
    MUL             shift and go to state 63
    DIV             shift and go to state 64
    DIV_KW          shift and go to state 65
    MOD_KW          shift and go to state 66
    LT              shift and go to state 67
    LE              shift and go to state 68
    EQ              shift and go to state 69
    NE              shift and go to state 70
    GT              shift and go to state 71
    GE              shift and go to state 72
    AND_KW          shift and go to state 73

  ! SUM             [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! SUB             [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! MUL             [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! DIV             [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! DIV_KW          [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! MOD_KW          [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! LT              [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! LE              [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! EQ              [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! NE              [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! GT              [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! GE              [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! AND_KW          [ reduce using rule 49 (expression -> expression OR_KW expression .) ]
  ! OR_KW           [ shift and go to state 74 ]


state 101

    (51) expression -> LRB expression RRB .

    THEN_KW         reduce using rule 51 (expression -> LRB expression RRB .)
    SUM             reduce using rule 51 (expression -> LRB expression RRB .)
    SUB             reduce using rule 51 (expression -> LRB expression RRB .)
    MUL             reduce using rule 51 (expression -> LRB expression RRB .)
    DIV             reduce using rule 51 (expression -> LRB expression RRB .)
    DIV_KW          reduce using rule 51 (expression -> LRB expression RRB .)
    MOD_KW          reduce using rule 51 (expression -> LRB expression RRB .)
    LT              reduce using rule 51 (expression -> LRB expression RRB .)
    LE              reduce using rule 51 (expression -> LRB expression RRB .)
    EQ              reduce using rule 51 (expression -> LRB expression RRB .)
    NE              reduce using rule 51 (expression -> LRB expression RRB .)
    GT              reduce using rule 51 (expression -> LRB expression RRB .)
    GE              reduce using rule 51 (expression -> LRB expression RRB .)
    AND_KW          reduce using rule 51 (expression -> LRB expression RRB .)
    OR_KW           reduce using rule 51 (expression -> LRB expression RRB .)
    DO_KW           reduce using rule 51 (expression -> LRB expression RRB .)
    END_KW          reduce using rule 51 (expression -> LRB expression RRB .)
    SEMICOLON       reduce using rule 51 (expression -> LRB expression RRB .)
    ELSE_KW         reduce using rule 51 (expression -> LRB expression RRB .)
    RRB             reduce using rule 51 (expression -> LRB expression RRB .)
    COMMA           reduce using rule 51 (expression -> LRB expression RRB .)


state 102

    (23) statement -> WHILE_KW expression DO_KW statement .

    END_KW          reduce using rule 23 (statement -> WHILE_KW expression DO_KW statement .)
    SEMICOLON       reduce using rule 23 (statement -> WHILE_KW expression DO_KW statement .)
    ELSE_KW         reduce using rule 23 (statement -> WHILE_KW expression DO_KW statement .)


state 103

    (13) procedure -> PROCEDURE_KW IDENTIFIER parameters SEMICOLON declarations . compound_statement SEMICOLON
    (17) compound_statement -> . BEGIN_KW statement_list END_KW

    BEGIN_KW        shift and go to state 15

    compound_statement             shift and go to state 109

state 104

    (15) parameters -> LRB declaration_list RRB .

    SEMICOLON       reduce using rule 15 (parameters -> LRB declaration_list RRB .)
    COLON           reduce using rule 15 (parameters -> LRB declaration_list RRB .)


state 105

    (5) declaration_list -> declaration_list SEMICOLON . identifier_list COLON type
    (6) identifier_list -> . IDENTIFIER
    (7) identifier_list -> . identifier_list COMMA IDENTIFIER

    IDENTIFIER      shift and go to state 11

    identifier_list                shift and go to state 31

state 106

    (14) function -> FUNCTION_KW IDENTIFIER parameters COLON type . SEMICOLON declarations compound_statement SEMICOLON

    SEMICOLON       shift and go to state 110


state 107

    (29) actual_parameter_list -> actual_parameter_list COMMA actual_parameter .

    RRB             reduce using rule 29 (actual_parameter_list -> actual_parameter_list COMMA actual_parameter .)
    COMMA           reduce using rule 29 (actual_parameter_list -> actual_parameter_list COMMA actual_parameter .)


state 108

    (21) statement -> IF_KW expression THEN_KW statement ELSE_KW . statement
    (20) statement -> . IDENTIFIER ASSIGN expression
    (21) statement -> . IF_KW expression THEN_KW statement ELSE_KW statement
    (22) statement -> . IF_KW expression THEN_KW statement
    (23) statement -> . WHILE_KW expression DO_KW statement
    (24) statement -> . compound_statement
    (25) statement -> . IDENTIFIER arguments
    (26) statement -> . IDENTIFIER ASSIGN IDENTIFIER arguments
    (27) statement -> . empty
    (17) compound_statement -> . BEGIN_KW statement_list END_KW
    (52) empty -> .

    IDENTIFIER      shift and go to state 24
    IF_KW           shift and go to state 25
    WHILE_KW        shift and go to state 26
    BEGIN_KW        shift and go to state 15
    ELSE_KW         reduce using rule 52 (empty -> .)
    END_KW          reduce using rule 52 (empty -> .)
    SEMICOLON       reduce using rule 52 (empty -> .)

    statement                      shift and go to state 111
    compound_statement             shift and go to state 27
    empty                          shift and go to state 28

state 109

    (13) procedure -> PROCEDURE_KW IDENTIFIER parameters SEMICOLON declarations compound_statement . SEMICOLON

    SEMICOLON       shift and go to state 112


state 110

    (14) function -> FUNCTION_KW IDENTIFIER parameters COLON type SEMICOLON . declarations compound_statement SEMICOLON
    (2) declarations -> . VAR_KW declaration_list SEMICOLON
    (3) declarations -> . empty
    (52) empty -> .

    VAR_KW          shift and go to state 5
    BEGIN_KW        reduce using rule 52 (empty -> .)

    declarations                   shift and go to state 113
    empty                          shift and go to state 6

state 111

    (21) statement -> IF_KW expression THEN_KW statement ELSE_KW statement .

    END_KW          reduce using rule 21 (statement -> IF_KW expression THEN_KW statement ELSE_KW statement .)
    SEMICOLON       reduce using rule 21 (statement -> IF_KW expression THEN_KW statement ELSE_KW statement .)
    ELSE_KW         reduce using rule 21 (statement -> IF_KW expression THEN_KW statement ELSE_KW statement .)


state 112

    (13) procedure -> PROCEDURE_KW IDENTIFIER parameters SEMICOLON declarations compound_statement SEMICOLON .

    BEGIN_KW        reduce using rule 13 (procedure -> PROCEDURE_KW IDENTIFIER parameters SEMICOLON declarations compound_statement SEMICOLON .)
    PROCEDURE_KW    reduce using rule 13 (procedure -> PROCEDURE_KW IDENTIFIER parameters SEMICOLON declarations compound_statement SEMICOLON .)
    FUNCTION_KW     reduce using rule 13 (procedure -> PROCEDURE_KW IDENTIFIER parameters SEMICOLON declarations compound_statement SEMICOLON .)


state 113

    (14) function -> FUNCTION_KW IDENTIFIER parameters COLON type SEMICOLON declarations . compound_statement SEMICOLON
    (17) compound_statement -> . BEGIN_KW statement_list END_KW

    BEGIN_KW        shift and go to state 15

    compound_statement             shift and go to state 114

state 114

    (14) function -> FUNCTION_KW IDENTIFIER parameters COLON type SEMICOLON declarations compound_statement . SEMICOLON

    SEMICOLON       shift and go to state 115


state 115

    (14) function -> FUNCTION_KW IDENTIFIER parameters COLON type SEMICOLON declarations compound_statement SEMICOLON .

    BEGIN_KW        reduce using rule 14 (function -> FUNCTION_KW IDENTIFIER parameters COLON type SEMICOLON declarations compound_statement SEMICOLON .)
    PROCEDURE_KW    reduce using rule 14 (function -> FUNCTION_KW IDENTIFIER parameters COLON type SEMICOLON declarations compound_statement SEMICOLON .)
    FUNCTION_KW     reduce using rule 14 (function -> FUNCTION_KW IDENTIFIER parameters COLON type SEMICOLON declarations compound_statement SEMICOLON .)

